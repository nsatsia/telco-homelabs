---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  name: postsync-csv-wait-patch-metal3-job
  namespace: telco-gitops
spec:
  template:
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30
      containers:
        - image: lab-registry.ocpsmc.lab.diktio.net/nsatsia/telco-toolbox:latest
          imagePullPolicy: Always
          # imagePullPolicy: IfNotPresent
          name: mcp-wait-job
          env:
            - name: SLEEP
              value: "3"
            # Assumes ACI name is aci-<cluster-name>-lab>
            # Assumes secret name is cluster-<cluster_name>-lab-admin-kubeconfig
            - name: CLUSTER_NAME
              value: "ocptest"
          command:
            - /bin/bash
            - -c
            - |
              echo "OCS PreSync Hook"
              URL_READY="Pausing $SLEEP seconds..."
              while [ "$URL_READY" != "https" ]; do
                echo "Waiting for the AI status URL to be ready. ($URL_READY)"
                sleep $SLEEP
                URL=$(oc -n assisted-installer get agentclusterinstalls.extensions.hive.openshift.io aci-$CLUSTER_NAME-lab -o=jsonpath="{.status.debugInfo.eventsURL}")
                URL_READY=$(echo $URL | awk -F ":" '{print $1}')
              done
              INSTALL_STATUS="Waiting for install to complete"
              while [ "$INSTALL_STATUS" != "Successfully finished installing cluster" ]; do
                echo "Waiting for the cluster to complete installation. ($INSTALL_STATUS)"
                sleep 30
                # INSTALL_STATUS=$( curl -s -k $URL | jq .[-1:][0].message )
                INSTALL_STATUS=$( curl -s -k $URL | awk -F '"' '{print $(NF-5)}' )
              done
              oc get secret -n assisted-installer cluster-$CLUSTER_NAME-lab-admin-kubeconfig -o jsonpath={.data.kubeconfig} | base64 -d > /tmp/kubeconfig
              ARGOPW=$(oc get secret -n telco-gitops telco-gitops-cluster -o go-template='{{index .data "admin.password"}}' | base64 -d)
              argocd --username=admin --password=$ARGOPW --insecure --config /tmp/config login telco-gitops-server-telco-gitops.apps.ocpsmc.lab.diktio.net
              argocd cluster add --config /tmp/config --kubeconfig /tmp/kubeconfig admin --name telco-ocptest
              argocd logout --config /tmp/config admin
              rm -f /tmp/kubeconfig /tmp/config 
              echo "All done! Hooray!"
              sleep 120

